services:
  # 프론트엔드 Next.js 서비스
  frontend:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:5000
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - smart-farm-network

  # 백엔드 Flask 서비스  
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=your-super-secret-key-change-this
      - UPLOAD_FOLDER=/app/uploads
      - PYTHONPATH=/app
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/models:/app/models
    restart: unless-stopped
    networks:
      - smart-farm-network

  # Nginx 리버스 프록시
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - smart-farm-network

networks:
  smart-farm-network:
    driver: bridge

volumes:
  uploads:
  models: 